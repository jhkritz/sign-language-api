image: jjanzic/docker-python3-opencv

#variables:
#  PIP_CACHE_DIR: "$CI_PROJECT_DIR/python_cache"

#cache:
#  key: cache_key
#  paths:
#    ['$CI_PROJECT_DIR/python_cache']

stages:
  - test
  - deploy

run_tests:
  stage : test
  tags:
    - shared-docker-runner
  script:
    - cd frontend
    - sudo apt install curl
    - curl -sL https://deb.nodesource.com/setup_6.x | sudo bash -
    - apt-get install -y nodejs
    - apt-get install -y npm

deploy_staging:
  stage: deploy
  only:
    - main
  tags:
    - shared-docker-runner
  script:
    - git remote remove heroku_backend || echo Already removed.
    - git remote remove heroku_frontend || echo Already removed.
    - git remote add heroku_backend https://heroku:$HEROKU_API_KEY@git.heroku.com/guarded-hamlet-40611.git || echo heroku_backend should exist.
    - git remote add heroku_frontend https://heroku:$HEROKU_API_KEY@git.heroku.com/rocky-taiga-14209.git || echo heroku_frontend should exist.
    - git push heroku_backend `git subtree split --prefix backend`:main --force                     
    - git push heroku_frontend `git subtree split --prefix frontend`:main --force 

  environment:
    name: staging
    url: https://flask-api-staging.herokuapp.com/


deploy_production:
  stage: deploy
  tags:
    - shared-docker-runner
  script:
    - git remote add heroku https://heroku:$HEROKU_API_KEY@git.heroku.com/flask-api-prod.git
    - git push heroku master
    - echo "Deployed to Production Server https://flask-api-prod.herokuapp.com"
  environment:
    name: production
    url: https://flask-api-prod.herokuapp.com/
  when: manual
